@{
    Layout = "/Views/GdsLayout.cshtml";
}
@model GroupAddViewModel
@{
    var groupSearchViewModel = new GroupSearchViewModel()
    {
        StatementOrganisations = Model.StatementOrganisations,
        OrganisationName = Model.OrganisationName,
        SubmissionDeadline = Model.SubmissionDeadline,
        OrganisationId = Model.OrganisationId
    };
}
@section BeforeMain{
    @if (!string.IsNullOrWhiteSpace(Model.BackUrl))
    {
        <a class="govuk-back-link" href="@Model.BackUrl">Back</a>
    }
}

@using (Html.BeginForm())
{
    @await Html.GovUkValidationSummaryAsync();
    @Html.AntiForgeryToken();    
    @Html.HiddenFor(m => m.Submitted);
    @Html.HiddenFor(m => m.OrganisationId);
    @Html.HiddenFor(m => m.SubmissionDeadline);

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l">
                @Model.PageTitle
            </h1>
            <partial name="GroupSearch/_SearchHeader" model="groupSearchViewModel" />
        </div>
    </div>

    <a href="@Model.BackUrl">
        Return to previous search results
    </a>

    <div class="govuk-grid-row govuk-!-margin-bottom-6 govuk-!-margin-top-4">
        <div class="govuk-grid-column-two-thirds">

            @Html.LabelFor(m => m.NewOrganisationName, "Tell us the name of the organisation", new { @class = "govuk-label" })
            <div class="organisation-input-table">
                <div class="organisation-input-cell textbox">
                    @Html.TextBoxFor(m => m.NewOrganisationName, new { @class = "govuk-input" })<br />
                </div>
                <div class="organisation-input-cell">
                    <button class="govuk-button govuk-button--secondary" data-module="govuk-button" type="submit" name="addIndex" value="0">
                        Include
                    </button>
                </div>
                <span asp-validation-for="OrganisationName" class="govuk-error-message"></span>
            </div>

            @if (Model.StatementOrganisations.Any(x => x.ManuallyAdded))
            {
                <table class="govuk-table organisation-list">
                    <tbody class="govuk-table__body">
                        @for (var organisationIndex = 0; organisationIndex < Model.StatementOrganisations.Count; organisationIndex++)
                        {
                            @if (!Model.StatementOrganisations[organisationIndex].ManuallyAdded) continue;

                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">
                                    <div>
                                        <p class="govuk-body govuk-!-margin-bottom-2 govuk-!-font-weight-bold"> @(Model.StatementOrganisations[organisationIndex].OrganisationName)</p>
                                    </div>

                                </td>
                                <td class="govuk-table__cell buttons">
                                    <button type="submit" class="link-button" name="removeIndex" value="@organisationIndex">Remove</button>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
        </div>
    </div>

    <a class="govuk-button" href="@(Model.StatementOrganisations.Count > 0 ? Model.ContinueUrl : Model.SkipUrl)">Continue</a>
}

