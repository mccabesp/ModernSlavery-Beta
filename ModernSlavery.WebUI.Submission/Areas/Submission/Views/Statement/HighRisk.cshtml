@{
    Layout = "/Views/GdsLayout.cshtml";
    Title = Model.PageTitle;
}
@model HighRiskViewModel
@using ModernSlavery.Core.Entities.StatementSummary.V1;
@using ModernSlavery.Core.Interfaces;
@inject IGovUkCountryProvider CountryProvider

@using static ModernSlavery.Core.Entities.StatementSummary.V1.StatementSummary.StatementRisk;
@section BeforeMain {
    <a class="govuk-back-link" href="@Model.BackUrl">Back</a>
}
<div class="app-high-risk govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { novalidate = "" }))
        {
            @await Html.GovUkValidationSummaryAsync();
            @Html.AntiForgeryToken();
            @Html.HiddenFor(m => m.Submitted);
            @Html.HiddenFor(m => m.TotalRisks);
            @Html.HiddenFor(m => m.Description);

            <h1 class="govuk-heading-l govuk-!-margin-bottom-5">
                @Model.PageTitle
            </h1>
            <div class="govuk-inset-text govuk-!-margin-bottom-7">
                <div class="risk-description-edit">
                    <a class="govuk-link" href="@Model.EditDescriptionUrl">Edit</a>
                </div>
                <div class="risk-description">
                    @Model.Description
                </div>
            </div>

            <div class="govuk-form-group govuk-!-margin-bottom-5">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h2 class="govuk-fieldset__heading">
                            Where was the risk you described most likely to occur?
                        </h2>
                    </legend>
                    <div class="govuk-radios govuk-radios--conditional" data-module="govuk-radios">
                        @foreach (var riskSource in Enums.GetValues<RiskSourceTypes>(RiskSourceTypes.Unknown))
                        {
                            var value = (int)riskSource;
                            var isOther = riskSource == RiskSourceTypes.Other;
                            var isSupplyChain = riskSource == RiskSourceTypes.SupplyChains;

                            <div class="govuk-radios__item">
                                <input name="LikelySource" class="govuk-radios__input" id="source-@value" value="@value" type="radio" checked=@(Model.LikelySource == riskSource) data-aria-controls="@(isOther || isSupplyChain ? $"conditional-source-{value}" : "")">
                                <label class="govuk-label govuk-radios__label" for="source-@value">
                                    @riskSource.GetEnumDescription()
                                </label>
                            </div>

                            if (isSupplyChain)
                            {
                                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-source-@value">
                                    <div class="govuk-form-group @Html.SetErrorClass(model => model.SupplyChainTiers, "govuk-form-group--error")">
                                        <span id="supply-chains-hint" class="govuk-hint">
                                            Select all that apply
                                        </span>

                                        <div class="govuk-checkboxes">
                                            @foreach (var tier in Enums.GetValues<SupplyChainTierTypes>(SupplyChainTierTypes.Unknown))
                                            {
                                                var tierValue = (int)tier;
                                                var isNone = tier == SupplyChainTierTypes.None;
                                                if (isNone)
                                                {
                                                    <div class="govuk-!-margin-bottom-4 govuk-!-margin-left-2">
                                                        or
                                                    </div>
                                                }
                                                <div class="govuk-checkboxes__item">
                                                    <input name="SupplyChainTiers" class="govuk-checkboxes__input" id="tier-@tierValue" value="@tierValue" type="checkbox" data-mutually-exclusive-group="@isNone.ToString()" checked="@(Model.SupplyChainTiers.Contains(tier))">
                                                    <label class="govuk-label govuk-checkboxes__label govuk-!-font-weight-bold" for="tier-@tierValue">
                                                        @tier.GetEnumDescription()
                                                    </label>
                                                    @if (!isNone)
                                                    {
                                                        <div id="tier-hint-@tierValue" class="govuk-hint govuk-!-margin-left-3">
                                                            @GetTierExplanation(tier)
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                        <span asp-validation-for="SupplyChainTiers" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }

                            if (isOther)
                            {
                                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-source-@value">
                                    <div class="govuk-character-count" data-module="govuk-character-count" data-maxlength="200">
                                        <div class="govuk-form-group @Html.SetErrorClass(model => model.OtherLikelySource, "govuk-form-group--error")">
                                            <label class="govuk-label" for="OtherLikelySource">
                                                Please specify
                                            </label>
                                            <textarea id="other-source" name="@nameof(Model.OtherLikelySource)" class="govuk-textarea govuk-js-character-count" aria-describedby="other-source-info" spellcheck="false" rows="3">@Model.OtherLikelySource</textarea>
                                        </div>
                                        <div id="other-source-info" class="govuk-hint govuk-character-count__message" aria-live="polite">
                                            You can enter up to 200 characters
                                        </div>
                                        <span asp-validation-for="OtherLikelySource" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </fieldset>
            </div>

            <div class="govuk-form-group govuk-!-margin-bottom-5">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h2 class="govuk-fieldset__heading">
                            Who was most likely to be affected?
                        </h2>
                    </legend>
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @foreach (var targetType in Enums.GetValues<RiskTargetTypes>(RiskTargetTypes.Unknown))
                        {
                            var value = (int)targetType;
                            var isOther = targetType == RiskTargetTypes.Other;
                            <div class="govuk-checkboxes__item">
                                <input name="Targets" value="@value" id="@($"target{value}")" checked=@(Model.Targets.Contains(targetType)) class="govuk-checkboxes__input" type="checkbox" @(isOther ? $"data-aria-controls=targets-conditional-{value}" : "")>
                                <label class="govuk-label govuk-checkboxes__label" for="@($"target{value}")">
                                    @targetType.GetEnumDescription()
                                </label>
                            </div>
                            @if (isOther)
                            {
                                <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="targets-conditional-@value">
                                    <div class="govuk-form-group @Html.SetErrorClass(model => model.OtherTargets, "govuk-form-group--error")">
                                        <label class="govuk-label" for="OtherTargets">
                                            Please specify
                                        </label>
                                        <input asp-for="OtherTargets" class="govuk-input" spellcheck="false">
                                        <span asp-validation-for="OtherTargets" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </fieldset>
            </div>

            <div class="govuk-form-group govuk-!-margin-bottom-5">
                <label asp-for="SelectedCountry" class="govuk-label govuk-label--m">
                    In which country?
                </label>

                <div class="country-row">
                    <div class="country-input">
                        <select class="govuk-select" asp-for="SelectedCountry" asp-items="new SelectList(CountryProvider.GetAll(), nameof(GovUkCountry.FullReference), nameof(GovUkCountry.Name))">
                            <option value="" disabled selected></option>
                        </select>
                    </div>
                    <div class="country-button">
                        <button id="add-country-button" class="govuk-button govuk-button--secondary" type="submit" name="command" value="@BaseStatementViewModel.CommandType.AddCountry">Add country</button>
                    </div>
                </div>

                <partial name="Parts/_RiskCountries" model="Model" />
            </div>


            <div class="govuk-character-count govuk-!-margin-bottom-7" data-module="govuk-character-count" data-maxlength="500">
                <div class="govuk-form-group @Html.SetErrorClass(model => model.ActionsOrPlans, "govuk-form-group--error")">
                    <label class="govuk-label govuk-label--m" for="more-detail">
                        Tell us about your actions or plans to address this risk
                    </label>
                    <textarea name="ActionsOrPlans" class="govuk-textarea govuk-js-character-count" id="more-detail" rows="5" aria-describedby="more-detail-info">@(Model.ActionsOrPlans)</textarea>
                </div>
                <div id="more-detail-info" class="govuk-hint govuk-character-count__message" aria-live="polite">
                    You can enter up to 500 characters
                </div>
                <span asp-validation-for="ActionsOrPlans" class="govuk-error-message"></span>
            </div>

            <button class="govuk-button govuk-!-margin-right-1" data-module="govuk-button" type="submit" name="command" value="@BaseStatementViewModel.CommandType.Continue">
                Save and continue
            </button>

            <div class="skip-link">
                <a class="govuk-link" href="@(Model.SkipUrl)">Skip this question</a>
            </div>
        }
    </div>

</div>
@section BeforeLoadedCompiledScripts {
    @if (!BrowserIsIE11)@* Country picker doesnt work as selectedOptions in javascript doesnt work in IE 11 *@
    {
        <script asp-append-version="true" src="/assets/javascripts/location-autocomplete.min.js" type="text/javascript"></script>
    }
}
