@{
    Layout = "/Views/GdsLayout.cshtml";
}
@model HighRiskViewModel
@using ModernSlavery.Core.Entities.StatementSummary;
@using static ModernSlavery.Core.Entities.StatementSummary.IStatementSummary1;
@using static ModernSlavery.Core.Entities.StatementSummary.IStatementSummary1.StatementRisk;
@section BeforeMain {
    <a class="govuk-back-link" href="@Model.BackUrl">Back</a>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { novalidate = "" }))
        {
            @await Html.GovUkValidationSummaryAsync();
            @Html.AntiForgeryToken();
            @Html.HiddenFor(m => m.Submitted);
            @Html.HiddenFor(m => m.TotalRisks);
            @Html.HiddenFor(m => m.Description);
            @for (int i = 0; i < Model.Countries.Count; i++)
            {
                @Html.HiddenFor(model => Model.Countries[i])
            }

            <h1 class="govuk-heading-l">
                @Model.PageTitle
            </h1>
            <div class="govuk-details__text">
                @Model.Description
                <a href="@Model.BackUrl">Edit</a>
            </div>

            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h2 class="govuk-fieldset__heading">
                            Where was the risk you described most likely to occur?
                        </h2>
                    </legend>
                    <div class="govuk-radios govuk-radios--conditional" data-module="govuk-radios">
                        @foreach (var riskSource in Enums.GetValuesExcept<RiskSourceTypes>(RiskSourceTypes.Unknown))
                        {
                            var value = (int)riskSource;
                            var isOther = riskSource == RiskSourceTypes.Other;
                            var isSupplyChain = riskSource == RiskSourceTypes.SupplyChains;

                            <div class="govuk-radios__item">
                                <input name="LikelySource" class="govuk-radios__input" id="source-@value" value="@value" type="radio" checked=@(Model.LikelySource == riskSource) data-aria-controls="@(isOther || isSupplyChain ? $"conditional-source-{value}" : "")">
                                <label class="govuk-label govuk-radios__label" for="source-@value">
                                    @riskSource.GetEnumDescription()
                                </label>
                            </div>

                            if (isSupplyChain)
                            {
                                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-source-@value">
                                    <div class="govuk-form-group @Html.SetErrorClass(model => model.SupplyChainTiers, "govuk-form-group--error")">
                                        <span id="supply-chains-hint" class="govuk-hint">
                                            Select all that apply
                                        </span>

                                        <div class="govuk-checkboxes">
                                            @foreach (var tier in Enums.GetValuesExcept<SupplyChainTierTypes>(SupplyChainTierTypes.Unknown))
                                            {
                                                var tierValue = (int)tier;
                                                if (tier == SupplyChainTierTypes.None)
                                                {
                                                    <div>
                                                        or
                                                    </div>
                                                }
                                                <div class="govuk-checkboxes__item">
                                                    <input name="SupplyChainTiers" class="govuk-checkboxes__input" id="tier-@tierValue" value="@tierValue" type="checkbox" checked="@(Model.SupplyChainTiers.Contains(tier))">
                                                    <label class="govuk-label govuk-checkboxes__label" for="tier-@tierValue">
                                                        @tier.GetEnumDescription()
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                        <span asp-validation-for="SupplyChainTiers" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }

                            if (isOther)
                            {
                                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-source-@value">
                                    <div class="govuk-form-group @Html.SetErrorClass(model => model.OtherLikelySource, "govuk-form-group--error")">
                                        <label class="govuk-label" for="OtherLikelySource">
                                            Please specify
                                        </label>
                                        <textarea asp-for="OtherLikelySource" class="govuk-textarea" spellcheck="false" rows="5"></textarea>
                                        <span asp-validation-for="OtherLikelySource" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </fieldset>
            </div>

            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h2 class="govuk-fieldset__heading">
                            Who was most likely to be affected?
                        </h2>
                    </legend>
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @foreach (var targetType in Enums.GetValuesExcept<RiskTargetTypes>(RiskTargetTypes.Unknown))
                        {
                            var value = (int)targetType;
                            var isOther = targetType == RiskTargetTypes.Other;
                            <div class="govuk-checkboxes__item">
                                <input name="Targets" value="@value" id="@($"target{value}")" checked=@(Model.Targets.Contains(targetType)) class="govuk-checkboxes__input" type="checkbox" @(isOther ? $"data-aria-controls=targets-conditional-{value}" : "")>
                                <label class="govuk-label govuk-checkboxes__label" for="@($"target{value}")">
                                    @targetType.GetEnumDescription()
                                </label>
                            </div>
                            @if (isOther)
                            {
                                <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="targets-conditional-@value">
                                    <div class="govuk-form-group @Html.SetErrorClass(model => model.OtherTargets, "govuk-form-group--error")">
                                        <label class="govuk-label" for="OtherTargets">
                                            Please specify
                                        </label>
                                        <input asp-for="OtherTargets" class="govuk-input" spellcheck="false">
                                        <span asp-validation-for="OtherTargets" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </fieldset>
            </div>

            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h2 class="govuk-fieldset__heading">
                            In which country?
                        </h2>
                    </legend>
                    <div>
                        @if (Model.Countries.Any())
                        {
                            <table class="govuk-table">
                                <caption class="govuk-table__caption">Countries indentified in this risk</caption>
                                <thead class="govuk-table__head">
                                    <tr class="govuk-table__row">
                                        <th scope="col" class="govuk-table__header">Country</th>
                                        <th scope="col" class="govuk-table__header">Action</th>
                                    </tr>
                                </thead>
                                <tbody class="govuk-table__body">
                                    @foreach (var item in Model.Countries)
                                    {
                                        <tr class="govuk-table__row">
                                            <th scope="row" class="govuk-table__header">@item.GetEnumDescription()</th>
                                            <td class="govuk-table__cell">
                                                <button class="govuk-button govuk-button--secondary" type="submit" name="toRemove" value="@((int)item)">Remove</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                    <div class="govuk-grid-row">
                        @* this input should have an associated label *@
                        <div class="govuk-grid-column-one-half">
                            <input asp-for="SelectedCountry" class="govuk-input" type="text">
                        </div>
                        <div class="govuk-grid-column-one-half">
                            <button class="govuk-button govuk-button--secondary" type="submit" name="command" value="@BaseViewModel.CommandType.AddCountry">Add</button>
                        </div>
                    </div>
                </fieldset>
            </div>

            <button class="govuk-button govuk-!-margin-right-1" data-module="govuk-button" type="submit" name="command" value="@BaseViewModel.CommandType.Continue">
                Save and continue
            </button>

            @if (Model.GetStatus() == BaseViewModel.Status.Incomplete)
            {
                <div class="skip-link">
                    <a class="govuk-link" href="@(Model.SkipUrl)">Skip this question</a>
                </div>
            }
        }
    </div>

</div>
