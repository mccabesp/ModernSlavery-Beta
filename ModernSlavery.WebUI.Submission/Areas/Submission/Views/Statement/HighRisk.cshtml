@{
    Layout = "/Views/GdsLayout.cshtml";
}
@model HighRiskViewModel
@using ModernSlavery.Core.Entities.StatementSummary;
@section BeforeMain {
    <a class="govuk-back-link" href="@Model.BackUrl">Back</a>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { novalidate = "" }))
        {
            @await Html.GovUkValidationSummaryAsync();
            @Html.AntiForgeryToken();
            @Html.HiddenFor(m => m.Submitted);

            <h1 class="govuk-heading-l">
                @Model.PageTitle
            </h1>
            <div class="govuk-details__text">
                @Model.Risk.Description
                <a href="@Model.BackUrl">Edit</a>
            </div>

            //TODO: add tiers
            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                        <h1 class="govuk-fieldset__heading">
                            Where was the risk you described most likely to occur?
                        </h1>
                    </legend>
                    <div class="govuk-radios govuk-radios--conditional" data-module="govuk-radios">
                        @foreach (var item in Enums.GetValues<IStatementSummary1.StatementRisk.RiskSourceTypes>().Where(x => x != IStatementSummary1.StatementRisk.RiskSourceTypes.Unknown))
                        {
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="@($"source{(int)item }")" type="radio" data-aria-controls="conditional-source">
                                <label class="govuk-label govuk-radios__label" for="@($"source{(int)item }")">
                                    @item.GetEnumDescription()
                                </label>
                            </div>
                            @if (item == IStatementSummary1.StatementRisk.RiskSourceTypes.Other)
                            {
                            <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-source">
                                <div class="govuk-form-group">
                                    <label class="govuk-label" for="OtherLikelySource">
                                        Please specify
                                    </label>
                                    <textarea class="govuk-textarea" id="OtherLikelySource" spellcheck="false" rows="5" >@Model.Risk.OtherLikelySource</textarea>
                                    <span asp-validation-for="Risk.OtherLikelySource" class="govuk-error-message"></span>
                                </div>

                            </div>
                                }
                            }
                     </div>
                    </fieldset>
                </div>

                    <div class="govuk-form-group">
                        <fieldset class="govuk-fieldset">
                            <label>Who was most likely to be affected?</label>
                            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                @foreach (var targetType in Enums.GetValues<IStatementSummary1.StatementRisk.RiskTargetTypes>().Where(x => x != IStatementSummary1.StatementRisk.RiskTargetTypes.Unknown))
                                {
                                    <div class="govuk-checkboxes__item">
                                        <input name="Targets" value="@((int)targetType)" id="@($"target{(int)targetType}")" checked=@(Model.Risk.Targets.Contains(targetType)) class="govuk-checkboxes__input" type="checkbox" data-aria-controls="targets-conditional-@((int)targetType)">
                                        <label class="govuk-label govuk-checkboxes__label" for="@($"partner{(int)targetType}")">
                                            @targetType.GetEnumDescription()
                                        </label>                                        
                                    </div>
                                    @if (targetType == IStatementSummary1.StatementRisk.RiskTargetTypes.Other)
                    {
                        <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden @Html.SetErrorClass(model => model.Risk.OtherTargets, "govuk-form-group--error")" id="targets-conditional-@((int)targetType)">
                            <div class="govuk-form-group">
                                <label class="govuk-label" for="OtherTargets">
                                    Please specify
                                </label>
                                <input asp-for="Risk.OtherTargets" class="govuk-input" spellcheck="false">
                                <span asp-validation-for="Risk.OtherTargets" class="govuk-error-message"></span>
                            </div>
                        </div>
                    }
                                }
                            </div>
                        </fieldset>
                    </div>

                    //TODO:
                    <div class="govuk-form-group">
                        <h1 class="govuk-label-wrapper">
                            <label asp-for="Risk.Countries" class="govuk-label govuk-label--m">
                               In which country
                            </label>
                        </h1>
                        <input asp-for="Risk.Countries"class="govuk-input" >
                    </div>

          

            <button class="govuk-button govuk-!-margin-right-1" data-module="govuk-button" type="submit" name="command" value="@BaseViewModel.CommandType.Continue">
                Save and continue
            </button>

            @if (Model.GetStatus() == BaseViewModel.Status.Incomplete)
            {
                <a class="govuk-button" href="@(Model.SkipUrl)">Skip this question</a>
            }
        }
    </div>

</div>
