@using System.Linq;
@{
    Layout = "/Views/GdsLayout.cshtml";
}
@model SectorsViewModel

@section BeforeMain {
    <a class="govuk-back-link" href="@Model.BackUrl">Back</a>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { novalidate = "" }))
        {
            @await Html.GovUkValidationSummaryAsync();
            @Html.AntiForgeryToken();
            @Html.HiddenFor(m => m.Submitted);

            <h1 class="govuk-heading-l">
                @Model.PageTitle
            </h1>

            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset" aria-describedby="organisation-hint">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                        <h2 class="govuk-fieldset__heading govuk-!-font-weight-regular">
                            If your statement is for a group, select sectors for all organisations in the group.
                        </h2>
                    </legend>
                    <span id="organisation-hint" class="govuk-hint">
                        Select all that apply
                    </span>
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        @foreach (var sectorType in Model.SectorTypes)
                        {
                            <div class="govuk-checkboxes__item">
                                <input name="Sectors" value="@sectorType.Id" id="@($"sector{sectorType.Id}")" checked=@(Model.Sectors.Contains(sectorType.Id)) class="govuk-checkboxes__input" type="checkbox" data-aria-controls="organisation-conditional-@(sectorType.Id)">
                                <label class="govuk-label govuk-checkboxes__label" for="@($"sector{sectorType.Id}")">
                                    @sectorType.Description
                                </label>
                            </div>
                            @if (sectorType.Description.Equals("Other"))
                            {
                                <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden @Html.SetErrorClass(model => model.OtherSectors, "govuk-form-group--error")" id="organisation-conditional-@(sectorType.Id)">
                                    <div class="govuk-form-group">
                                        <label class="govuk-label" for="other">
                                            Please specify
                                        </label>
                                        <input asp-for="OtherSectors" class="govuk-input" />
                                        <span asp-validation-for="OtherSectors" class="govuk-error-message"></span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </fieldset>
            </div>

            <button class="govuk-button govuk-!-margin-right-1" data-module="govuk-button" type="submit" name="command" value="@BaseViewModel.CommandType.Continue">
                Save and continue
            </button>

            <div class="skip-link">
                <a class="govuk-link" href="@(Model.SkipUrl)">Skip this question</a>
            </div>
        }
    </div>
</div>
