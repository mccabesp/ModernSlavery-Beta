@model ScopingViewModel
@{
    var reasonQuestion = "Reason your organisation is not required to publish a modern slavery statement on your website";
    var reasonAnswer = Model.EnterAnswers.FriendlyReasonOptions.Count() == 1
        ? (IAnswer)new StringCheckYourAnswer(reasonQuestion, Model.EnterAnswers.FriendlyReasonOptions.SingleOrDefault(), "ReasonAnswer")
        : (IAnswer)new ListCheckYourAnswer(reasonQuestion, Model.EnterAnswers.FriendlyReasonOptions, "ReasonAnswer");
    var answers = !Model.UserIsRegistered
        ? new CheckYourAnswers(
            reasonAnswer,
            new StringCheckYourAnswer("Contact name", Model.EnterAnswers.FullName, "FullNameAnswer"),
            new StringCheckYourAnswer("Job title", Model.EnterAnswers.JobTitle, "JobTitleAnswer"),
            new StringCheckYourAnswer("Contact email", Model.EnterAnswers.EmailAddress, "EmailAddressAnswer")
            )
        : new CheckYourAnswers(reasonAnswer);
}

@await Html.PartialModelAsync(answers)