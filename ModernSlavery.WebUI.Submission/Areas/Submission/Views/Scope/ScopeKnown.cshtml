@model ScopingViewModel
@{
    Layout = "~/Views/DfeTemplate.cshtml";
    ViewBag.Title = "Scope already known - Modern Slavery reporting service";
}
<div class="grid-row">
    <div class="column-two-thirds">
        @using (Html.BeginForm(null, null, FormMethod.Post, new {@class = "form", autocomplete = "off", novalidate = ""}))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => Model.OrganisationId)

            <a id="BackLink" class="link-back" href="@Url.Action("OutOfScope")">Back <span class="visuallyhidden"> to the previous question</span></a>

            <h1 class="heading-large">
                Scope already declared
            </h1>
            <p>
                Your organisation is showing as @(Model.LastScope.ScopeStatus.IsAny(ScopeStatuses.InScope, ScopeStatuses.PresumedInScope) ? "in" : "out of") scope of the Modern Slavery reporting regulations for snapshot date <span class="nowrap">@(Model.LastScope.SnapshotDate.ToString("d MMMM yyyy"))</span>
                and @(Model.ThisScope.ScopeStatus.IsAny(ScopeStatuses.InScope, ScopeStatuses.PresumedInScope) ? "in" : "out of") scope for snapshot date <span class="nowrap">@(Model.ThisScope.SnapshotDate.ToString("d MMMM yyyy"))</span>.
            </p>
            @await Html.PartialAsync("Parts/EmployerDetailsPart", Model)

            <br/>

            if (User.Identity.IsAuthenticated)
            {
                <span>
                    <a class="button" href="@Url.Action("RegisterOrManage")">Continue</a>.
                </span>
            }
            else
            {
                <p class="text">
                    To change your scope for either of these snapshot dates you must
                    <a href="@Url.Action("RegisterOrManage")">@(Model.UserIsRegistered ? "" : "register and ")manage this organisation</a>.
                </p>
            }
        }
    </div>
</div>