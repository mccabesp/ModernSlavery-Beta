// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernSlavery.Infrastructure.Database;

namespace ModernSlavery.Infrastructure.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModernSlavery.Core.Entities.AddressStatus", b =>
                {
                    b.Property<long>("AddressStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<long>("ByUserId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("AddressStatusId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ByUserId");

                    b.HasIndex("StatusDate");

                    b.ToTable("AddressStatuses");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.AuditLog", b =>
                {
                    b.Property<long>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Action")
                        .HasColumnName("ActionId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ImpersonatedUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OriginalUserId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditLogId");

                    b.HasIndex("ImpersonatedUserId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("OriginalUserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.Feedback", b =>
                {
                    b.Property<long>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Difficulty")
                        .HasColumnName("DifficultyId")
                        .HasColumnType("tinyint");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte?>("WhyVisitMSUSite")
                        .HasColumnName("WhyVisitMSUSiteId")
                        .HasColumnType("tinyint");

                    b.HasKey("FeedbackId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.Organisation", b =>
                {
                    b.Property<long>("OrganisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DUNSNumber")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("DateOfCessation")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployerReference")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("LastCheckedAgainstCompaniesHouse")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LatestAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LatestPublicSectorTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LatestRegistrationOrganisationId")
                        .HasColumnName("LatestRegistration_OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LatestRegistrationUserId")
                        .HasColumnName("LatestRegistration_UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LatestScopeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LatestStatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OptedOutFromCompaniesHouseUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("SectorType")
                        .HasColumnName("SectorTypeId")
                        .HasColumnType("tinyint");

                    b.Property<string>("SecurityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SecurityCodeCreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SecurityCodeExpiryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("OrganisationId");

                    b.HasIndex("CompanyNumber")
                        .IsUnique()
                        .HasFilter("([CompanyNumber] IS NOT NULL)");

                    b.HasIndex("DUNSNumber")
                        .IsUnique()
                        .HasFilter("([DUNSNumber] IS NOT NULL)");

                    b.HasIndex("EmployerReference")
                        .IsUnique()
                        .HasFilter("([EmployerReference] IS NOT NULL)");

                    b.HasIndex("LatestAddressId");

                    b.HasIndex("LatestPublicSectorTypeId")
                        .IsUnique()
                        .HasFilter("[LatestPublicSectorTypeId] IS NOT NULL");

                    b.HasIndex("LatestScopeId");

                    b.HasIndex("LatestStatementId");

                    b.HasIndex("OrganisationName");

                    b.HasIndex("SectorType");

                    b.HasIndex("Status");

                    b.HasIndex("LatestRegistrationOrganisationId", "LatestRegistrationUserId");

                    b.HasIndex("LatestRegistrationUserId", "LatestRegistrationOrganisationId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationAddress", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsUkAddress")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PoBox")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TownCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("AddressId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("Status");

                    b.HasIndex("StatusDate");

                    b.ToTable("OrganisationAddresses");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationName", b =>
                {
                    b.Property<long>("OrganisationNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("OrganisationNameId");

                    b.HasIndex("Created");

                    b.HasIndex("Name");

                    b.HasIndex("OrganisationId");

                    b.ToTable("OrganisationNames");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationPublicSectorType", b =>
                {
                    b.Property<long>("OrganisationPublicSectorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<int>("PublicSectorTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Retired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("OrganisationPublicSectorTypeId");

                    b.HasIndex("Created");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("PublicSectorTypeId");

                    b.HasIndex("Retired");

                    b.ToTable("OrganisationPublicSectorTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationReference", b =>
                {
                    b.Property<long>("OrganisationReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReferenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ReferenceValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("OrganisationReferenceId");

                    b.HasIndex("Created");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("ReferenceName");

                    b.HasIndex("ReferenceValue");

                    b.ToTable("OrganisationReferences");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationScope", b =>
                {
                    b.Property<long>("OrganisationScopeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampaignId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactEmailAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ContactFirstname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactJobTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactLastname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ReadGuidance")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<byte>("RegisterStatus")
                        .HasColumnName("RegisterStatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterStatusDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("ScopeStatus")
                        .HasColumnName("ScopeStatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ScopeStatusDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("SubmissionDeadline")
                        .HasColumnType("date");

                    b.Property<string>("TurnOver")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("OrganisationScopeId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("RegisterStatus");

                    b.HasIndex("ScopeStatus");

                    b.HasIndex("ScopeStatusDate");

                    b.HasIndex("Status");

                    b.HasIndex("SubmissionDeadline");

                    b.ToTable("OrganisationScopes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationSicCode", b =>
                {
                    b.Property<long>("OrganisationSicCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Retired")
                        .HasColumnType("datetime2");

                    b.Property<int>("SicCodeId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("OrganisationSicCodeId");

                    b.HasIndex("Created");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("Retired");

                    b.HasIndex("SicCodeId");

                    b.ToTable("OrganisationSicCodes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationStatus", b =>
                {
                    b.Property<long>("OrganisationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("OrganisationStatusId");

                    b.HasIndex("ByUserId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("StatusDate");

                    b.ToTable("OrganisationStatuses");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.PublicSectorType", b =>
                {
                    b.Property<int>("PublicSectorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("PublicSectorTypeId");

                    b.ToTable("PublicSectorTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.ReminderEmail", b =>
                {
                    b.Property<long>("ReminderEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<byte>("SectorType")
                        .HasColumnName("SectorTypeId")
                        .HasColumnType("tinyint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ReminderEmailId");

                    b.HasIndex("UserId");

                    b.ToTable("ReminderEmails");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.SicCode", b =>
                {
                    b.Property<int>("SicCodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("SicSectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("SicCodeId");

                    b.HasIndex("SicSectionId");

                    b.ToTable("SicCodes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.SicSection", b =>
                {
                    b.Property<string>("SicSectionId")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("SicSectionId");

                    b.ToTable("SicSections");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.Statement", b =>
                {
                    b.Property<long>("StatementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("Date");

                    b.Property<string>("ApproverFirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ApproverJobTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ApproverLastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DueDiligenceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EHRCResponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<short>("ExcludedOrganisationCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("ForcedLabourDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("IncludedOrganisationCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<bool>("IncludesDueDiligence")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesGoals")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesMeasuringProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesPolicies")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesRisks")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesStructure")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludesTraining")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLateSubmission")
                        .HasColumnType("bit");

                    b.Property<string>("KeyAchievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LateReason")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte?>("MaxStatementYears")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MaxTurnover")
                        .HasColumnType("int");

                    b.Property<byte>("MinStatementYears")
                        .HasColumnType("tinyint");

                    b.Property<int>("MinTurnover")
                        .HasColumnType("int");

                    b.Property<string>("Modifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherHighRisks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPolicies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRelevantRisks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherSector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressMeasures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RisksDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlaveryInstanceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlaveryInstanceRemediation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StatementEndDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("StatementStartDate")
                        .HasColumnType("Date");

                    b.Property<string>("StatementUrl")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("StructureDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDeadline")
                        .HasColumnType("Date");

                    b.Property<string>("TrainingDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementId");

                    b.HasIndex("IncludesDueDiligence");

                    b.HasIndex("IncludesGoals");

                    b.HasIndex("IncludesPolicies");

                    b.HasIndex("IncludesRisks");

                    b.HasIndex("IncludesStructure");

                    b.HasIndex("IncludesTraining");

                    b.HasIndex("MaxTurnover");

                    b.HasIndex("MinTurnover");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("StatementEndDate");

                    b.HasIndex("StatementStartDate");

                    b.HasIndex("Status");

                    b.HasIndex("SubmissionDeadline");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementDiligence", b =>
                {
                    b.Property<short>("StatementDiligenceTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementDiligenceTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementDiligences");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementDiligenceType", b =>
                {
                    b.Property<short>("StatementDiligenceTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<short?>("ParentDiligenceTypeId")
                        .HasColumnType("smallint");

                    b.HasKey("StatementDiligenceTypeId");

                    b.HasIndex("ParentDiligenceTypeId");

                    b.ToTable("StatementDiligenceTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementHighRisk", b =>
                {
                    b.Property<short>("StatementRiskTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementRiskTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementHighRisks");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementLocationRisk", b =>
                {
                    b.Property<short>("StatementRiskTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementRiskTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementLocationRisks");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementOrganisation", b =>
                {
                    b.Property<long>("StatementOrganisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Included")
                        .HasColumnType("bit");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.HasKey("StatementOrganisationId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementOrganisations");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementPolicy", b =>
                {
                    b.Property<short>("StatementPolicyTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("StatementPolicyTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementPolicies");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementPolicyType", b =>
                {
                    b.Property<short>("StatementPolicyTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("StatementPolicyTypeId");

                    b.ToTable("StatementPolicyTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementRelevantRisk", b =>
                {
                    b.Property<short>("StatementRiskTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementRiskTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementRelevantRisks");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementRiskType", b =>
                {
                    b.Property<short>("StatementRiskTypeId")
                        .HasColumnType("smallint");

                    b.Property<byte>("Category")
                        .HasColumnName("RiskCategoryId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<short?>("ParentRiskTypeId")
                        .HasColumnType("smallint");

                    b.HasKey("StatementRiskTypeId");

                    b.HasIndex("ParentRiskTypeId");

                    b.ToTable("StatementRiskTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementSector", b =>
                {
                    b.Property<short>("StatementSectorTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("StatementSectorTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementSectors");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementSectorType", b =>
                {
                    b.Property<short>("StatementSectorTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("StatementSectorTypeId");

                    b.ToTable("StatementSectorTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementStatus", b =>
                {
                    b.Property<long>("StatementStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("StatementStatusId");

                    b.HasIndex("ByUserId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementStatuses");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementTraining", b =>
                {
                    b.Property<short>("StatementTrainingTypeId")
                        .HasColumnType("smallint");

                    b.Property<long>("StatementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementTrainingTypeId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementTrainings");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementTrainingType", b =>
                {
                    b.Property<short>("StatementTrainingTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("StatementTrainingTypeId");

                    b.ToTable("StatementTrainingTypes");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmailAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactJobTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactOrganisation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("EmailVerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailVerifyHash")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("EmailVerifySendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("HashingAlgorithm")
                        .HasColumnName("HashingAlgorithmId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ResetAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResetSendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("VerifyAttemptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VerifyAttempts")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("ContactEmailAddress");

                    b.HasIndex("ContactPhoneNumber");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("Status");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.UserOrganisation", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ConfirmAttemptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ConfirmAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Method")
                        .HasColumnName("MethodId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PIN")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("PINConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PINHash")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("PINSentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PITPNotifyLetterId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserId", "OrganisationId");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOrganisations");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.UserSetting", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Key")
                        .HasColumnName("KeyId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserId", "Key");

                    b.HasIndex("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.UserStatus", b =>
                {
                    b.Property<long>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ByUserId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnName("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("UserStatusId");

                    b.HasIndex("ByUserId");

                    b.HasIndex("StatusDate");

                    b.HasIndex("UserId");

                    b.ToTable("UserStatuses");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.AddressStatus", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.OrganisationAddress", "Address")
                        .WithMany("AddressStatuses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.User", "ByUser")
                        .WithMany("AddressStatus")
                        .HasForeignKey("ByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.AuditLog", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.User", "ImpersonatedUser")
                        .WithMany()
                        .HasForeignKey("ImpersonatedUserId");

                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId");

                    b.HasOne("ModernSlavery.Core.Entities.User", "OriginalUser")
                        .WithMany()
                        .HasForeignKey("OriginalUserId");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.Organisation", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.OrganisationAddress", "LatestAddress")
                        .WithMany()
                        .HasForeignKey("LatestAddressId");

                    b.HasOne("ModernSlavery.Core.Entities.OrganisationPublicSectorType", "LatestPublicSectorType")
                        .WithMany()
                        .HasForeignKey("LatestPublicSectorTypeId");

                    b.HasOne("ModernSlavery.Core.Entities.OrganisationScope", "LatestScope")
                        .WithMany()
                        .HasForeignKey("LatestScopeId");

                    b.HasOne("ModernSlavery.Core.Entities.Statement", "LatestStatement")
                        .WithMany()
                        .HasForeignKey("LatestStatementId");

                    b.HasOne("ModernSlavery.Core.Entities.UserOrganisation", "LatestRegistration")
                        .WithMany()
                        .HasForeignKey("LatestRegistrationOrganisationId", "LatestRegistrationUserId");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationAddress", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationAddresses")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationName", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationNames")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationPublicSectorType", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.PublicSectorType", "PublicSectorType")
                        .WithMany()
                        .HasForeignKey("PublicSectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationReference", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationReferences")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationScope", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationScopes")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationSicCode", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationSicCodes")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.SicCode", "SicCode")
                        .WithMany("OrganisationSicCodes")
                        .HasForeignKey("SicCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.OrganisationStatus", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.User", "ByUser")
                        .WithMany("OrganisationStatus")
                        .HasForeignKey("ByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationStatuses")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.ReminderEmail", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.User", "User")
                        .WithMany("ReminderEmails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.SicCode", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.SicSection", "SicSection")
                        .WithMany("SicCodes")
                        .HasForeignKey("SicSectionId")
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.Statement", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("Statements")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementDiligence", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.StatementDiligenceType", "StatementDiligenceType")
                        .WithMany("StatementDiligences")
                        .HasForeignKey("StatementDiligenceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("Diligences")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementDiligenceType", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.StatementDiligenceType", "ParentDiligenceType")
                        .WithMany("ChildDiligenceTypes")
                        .HasForeignKey("ParentDiligenceTypeId");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementHighRisk", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("HighRisks")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.StatementRiskType", "StatementRiskType")
                        .WithMany("StatementHighRisks")
                        .HasForeignKey("StatementRiskTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementLocationRisk", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("LocationRisks")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.StatementRiskType", "StatementRiskType")
                        .WithMany("StatementLocationRisks")
                        .HasForeignKey("StatementRiskTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementOrganisation", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId");

                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("StatementOrganisations")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementPolicy", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("Policies")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.StatementPolicyType", "StatementPolicyType")
                        .WithMany("StatementPolicies")
                        .HasForeignKey("StatementPolicyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementRelevantRisk", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("RelevantRisks")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.StatementRiskType", "StatementRiskType")
                        .WithMany("StatementRelevantRisks")
                        .HasForeignKey("StatementRiskTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementRiskType", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.StatementRiskType", "ParentRiskType")
                        .WithMany("ChildRiskType")
                        .HasForeignKey("ParentRiskTypeId");
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementSector", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("Sectors")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.StatementSectorType", "StatementSectorType")
                        .WithMany("StatementSectors")
                        .HasForeignKey("StatementSectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementStatus", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.User", "ByUser")
                        .WithMany("StatementStatusesByUser")
                        .HasForeignKey("ByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("Statuses")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.StatementTraining", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.Statement", "Statement")
                        .WithMany("Training")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.StatementTrainingType", "StatementTrainingType")
                        .WithMany("StatementTraining")
                        .HasForeignKey("StatementTrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.UserOrganisation", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.OrganisationAddress", "Address")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("AddressId");

                    b.HasOne("ModernSlavery.Core.Entities.Organisation", "Organisation")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.User", "User")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.UserSetting", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModernSlavery.Core.Entities.UserStatus", b =>
                {
                    b.HasOne("ModernSlavery.Core.Entities.User", "ByUser")
                        .WithMany("UserStatusesByUser")
                        .HasForeignKey("ByUserId")
                        .IsRequired();

                    b.HasOne("ModernSlavery.Core.Entities.User", "User")
                        .WithMany("UserStatuses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
