@{
    Layout = "~/Views/DfeTemplate.cshtml";
    ViewBag.Title = "Add your organisation's address - Modern Slavery reporting service";
}
@model OrganisationViewModel
<div id="add-address-content">
    <div class="grid-row">
        <div class="column-full">
            @if (!string.IsNullOrWhiteSpace(Model.AddressReturnAction))
            {
                <a href="@Url.Action(Model.AddressReturnAction)" class="link-back">Back</a>
            }
            else
            {
                <a href="@Url.Action("ChooseOrganisation")" class="link-back">Back</a>
            }
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.AddressReturnAction)
        @Html.HiddenFor(model => model.AddressSource)
        @Html.HiddenFor(model => model.BackAction)
        @Html.HiddenFor(model => model.CharityNumber)
        @Html.HiddenFor(model => model.CompanyNumber)
        @Html.HiddenFor(model => model.ConfirmReturnAction)
        @Html.HiddenFor(model => model.ContactEmailAddress)
        @Html.HiddenFor(model => model.ContactFirstName)
        @Html.HiddenFor(model => model.ContactJobTitle)
        @Html.HiddenFor(model => model.ContactLastName)
        @Html.HiddenFor(model => model.ContactPhoneNumber)
        @Html.HiddenFor(model => model.ManualEmployerIndex)
        @Html.HiddenFor(model => model.MatchedReferenceCount)
        @Html.HiddenFor(model => model.MutualNumber)
        @Html.HiddenFor(model => model.NameSource)
        @Html.HiddenFor(model => model.OrganisationName)
        @Html.HiddenFor(model => model.OtherName)
        @Html.HiddenFor(model => model.OtherValue)
        @Html.HiddenFor(model => model.SearchText)
        @Html.HiddenFor(model => model.SectorType)
        @Html.HiddenFor(model => model.SelectedEmployerIndex)
        @Html.HiddenFor(model => model.SicSource)
        @Html.HiddenFor(model => model.ManualRegistration)
        @Html.HiddenFor(model => model.ManualAddress)
        @Html.HiddenFor(model => model.WrongAddress)
        @Html.HiddenFor(model => model.ManualAuthorised)
        @Html.HiddenFor(model => model.SelectedAuthorised)

        <div class="grid-row">
            <div class="column-two-thirds">
                @await Html.CustomValidationSummaryAsync()
                <h1 class="heading-large">
                    Address of the organisation you're reporting for
                </h1>
                <div class="dynamic-content default-content">
                    <p>Enter the correspondence address for the organisation whose Modern Slavery statement you’re reporting.</p>

                    <h2 class="heading-medium">Organisation address</h2>
                    <div class="form-group @Html.SetErrorClass(model => model.Address1, "error") form-group-compound">
                        @Html.LabelFor(model => model.Address1, new {@class = "form-label col-md-2"})
                        @Html.ValidationMessageFor(model => model.Address1, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.Address1, new {@class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.Address2, "error")">
                        @Html.LabelFor(model => model.Address2, new {@class = "form-label col-md-2 visuallyhidden"})
                        @Html.ValidationMessageFor(model => model.Address2, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.Address2, new {@class = "form-control", placeholder = "optional"})
                        </div>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.Address3, "error")">
                        @Html.LabelFor(model => model.Address3, new {@class = "form-label col-md-2"})
                        @Html.ValidationMessageFor(model => model.Address3, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.Address3, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group @Html.SetErrorClass(model => model.Postcode, "error")">
                        @Html.LabelFor(model => model.Postcode, new {@class = "form-label col-md-2"})
                        @Html.ValidationMessageFor(model => model.Postcode, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.Postcode, new {@class = "form-control form-control-1-4"})
                        </div>
                    </div>
                    <br><br>
                    <input class="button" type="submit" role="button" name="command" value="Continue" aria-label="Continue"/>
                </div>
            </div>
        </div>
    }
</div>