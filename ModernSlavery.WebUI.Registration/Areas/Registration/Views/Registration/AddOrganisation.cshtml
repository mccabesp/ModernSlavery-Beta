@{
    Layout = "~/Views/GdsLayout.cshtml";
    ViewBag.Title = "Add your organisation - Modern Slavery reporting service";
}
@model OrganisationViewModel
@section BeforeMain {
    <a href="@Url.Action("ChooseOrganisation")" class="govuk-back-link">Back</a>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { novalidate = "" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Address1)
            @Html.HiddenFor(model => model.Address2)
            @Html.HiddenFor(model => model.Address3)
            @Html.HiddenFor(model => model.AddressReturnAction)
            @Html.HiddenFor(model => model.AddressSource)
            @Html.HiddenFor(model => model.BackAction)
            @Html.HiddenFor(model => model.City)
            @Html.HiddenFor(model => model.ConfirmReturnAction)
            @Html.HiddenFor(model => model.ContactEmailAddress)
            @Html.HiddenFor(model => model.ContactFirstName)
            @Html.HiddenFor(model => model.ContactJobTitle)
            @Html.HiddenFor(model => model.ContactLastName)
            @Html.HiddenFor(model => model.ContactPhoneNumber)
            @Html.HiddenFor(model => model.Country)
            @Html.HiddenFor(model => model.County)
            @Html.HiddenFor(model => model.NameSource)
            @Html.HiddenFor(model => model.PoBox)
            @Html.HiddenFor(model => model.Postcode)
            @Html.HiddenFor(model => model.SearchText)
            @Html.HiddenFor(model => model.SectorType)
            @Html.HiddenFor(model => model.RegistrationType)
            @Html.HiddenFor(model => model.SelectedOrganisationIndex)
            @Html.HiddenFor(model => model.SicSource)
            @Html.HiddenFor(model => model.ManualRegistration)
            @Html.HiddenFor(model => model.IsManualAddress)
            @Html.HiddenSecuredFor(model => model.IsManualAuthorised)
            @Html.HiddenSecuredFor(model => model.IsSelectedAuthorised)


            @await Html.GovUkValidationSummaryAsync()
            <h1 class="govuk-heading-l">
                Details of the organisation you want to register
            </h1>
            <div class="govuk-form-group">

                <p class="govuk-body">Enter the name for the organisation whose Modern Slavery statement you’re reporting.</p>

                <div class="govuk-form-group @Html.SetErrorClass(model => model.OrganisationName, "govuk-form-group--error")">
                    @Html.LabelFor(model => model.OrganisationName, "Organisation name", new { @class = "govuk-label" })
                    @Html.ValidationMessageFor(model => model.OrganisationName, "", new { @class = "govuk-error-message govuk-!-margin-bottom-0" })
                    @Html.CustomEditorFor(model => model.OrganisationName, new { @class = "govuk-input govuk-!-width-one-half" })

                </div>

                <p class="govuk-body">Enter one or more unique references to help identify your organisation:</p>

                <div id="divCompanyNumber" class="govuk-form-group @Html.SetErrorClass(model => model.CompanyNumber, "govuk-form-group--error")">
                    @Html.LabelFor(model => model.CompanyNumber, "Company number", new { @class = "govuk-label" })
                    @Html.ValidationMessageFor(model => model.CompanyNumber, "", new { @class = "govuk-error-message govuk-!-margin-bottom-0" })
                    @Html.CustomEditorFor(model => model.CompanyNumber, new { @class = "govuk-input govuk-!-width-one-half" })

                </div>

                <div id="divCharityNumber" class="govuk-form-group @Html.SetErrorClass(model => model.CharityNumber, "govuk-form-group--error")">
                    @Html.LabelFor(model => model.CharityNumber, "Charity number", new { @class = "govuk-label" })
                    @Html.ValidationMessageFor(model => model.CharityNumber, "", new { @class = "govuk-error-message govuk-!-margin-bottom-0" })

                    @Html.CustomEditorFor(model => model.CharityNumber, new { @class = "govuk-input govuk-!-width-one-half" })

                </div>

                <div id="divMutualPartnershipNumber" class="govuk-form-group @Html.SetErrorClass(model => model.MutualNumber, "govuk-form-group--error")">
                    @Html.LabelFor(model => model.MutualNumber, "Mutual partnership number", new { @class = "govuk-label" })
                    @Html.ValidationMessageFor(model => model.MutualNumber, "", new { @class = "govuk-error-message govuk-!-margin-bottom-0" })

                    @Html.CustomEditorFor(model => model.MutualNumber, new { @class = "govuk-input govuk-!-width-one-half" })

                </div>
                <br />

                <details class="govuk-details" data-module="govuk-details" @(!string.IsNullOrWhiteSpace(Model.OtherName) || !string.IsNullOrWhiteSpace(Model.OtherValue) ? "open" : "")>
                    <summary class="govuk-details__summary">
                        <span class="govuk-details__summary-text">Other reference?</span>
                    </summary>
                    <div class="govuk-details__text">
                        <div id="divNameOrType" class="govuk-form-group @Html.SetErrorClass(model => model.OtherName, "govuk-form-group--error")">
                            <label class="govuk-label" for="OtherName">Name or type <span style="opacity:0.8">(e.g., 'DUNS ')</span></label>
                            @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "govuk-error-message govuk-!-margin-bottom-0" })
                            @Html.CustomEditorFor(model => model.OtherName, new { @class = "govuk-input govuk-!-width-one-half" })
                        </div>
                        <div id="divUniqueNumberOrValue" class="govuk-form-group @Html.SetErrorClass(model => model.OtherValue, "govuk-form-group--error")">
                            <label class="govuk-label" for="OtherValue">Unique number or value <span style="opacity:0.8">(e.g., '987654321')</span></label>
                            @Html.ValidationMessageFor(model => model.OtherValue, "", new { @class = "govuk-error-message govuk-!-margin-bottom-0" })
                            @Html.CustomEditorFor(model => model.OtherValue, new { @class = "govuk-input govuk-!-width-one-half" })
                        </div>
                    </div>
                </details>
            </div>

            <label class="govuk-label" for="NoReference">
                @Html.CheckBoxFor(m => m.NoReference)
                I don't have a reference for this organisation
            </label>

            <br />
            <input class="govuk-button" type="submit" role="button" name="command" value="Continue" aria-label="Continue" />

        }
    </div>
</div>

