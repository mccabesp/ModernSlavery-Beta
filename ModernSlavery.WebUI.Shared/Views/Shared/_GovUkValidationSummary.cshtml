@{
    var errors = ViewData.ModelState
        .Where(kv => ViewBag.ExcludePropertyErrors == false || string.IsNullOrWhiteSpace(kv.Key))
        .SelectMany(keyValuePair => keyValuePair.Value.Errors.Select(error => new { Property = keyValuePair.Key, ModelError = error }));

    var messages = this.GetDisplayMessages();
}
@if (errors.Any())
{
    <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary" data-valmsg-summary="@(!ViewBag.ExcludePropertyErrors)">

        <h2 class="govuk-error-summary__title" id="error-summary-title">
            <span>There is a problem</span>
        </h2>

        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
                @foreach (var error in errors)
                {
                    <li>
                        <span class="govuk-error-message">@error.ModelError.ErrorMessage</span>
                    </li>
                }
            </ul>
        </div>
    </div>
}
@if (messages.Any())
{
    <div class="display-message-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary" data-valmsg-summary="@(!ViewBag.ExcludePropertyErrors)">
        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
                @foreach (var message in messages)
                {
                    <li>
                        <span class="display-message">@message</span>
                    </li>
                }
            </ul>
        </div>
    </div>
    this.ClearDisplayMessages();
}